#MIT License
#
#Copyright (c) 2018 MTA SZTAKI
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

find_package(OpenGL REQUIRED)

set(FILAMENT_DOWNLOAD_URL "https://github.com/google/filament/releases/download/v1.9.9/filament-v1.9.9-windows.tgz")
set(FILAMENT_PREBUILD_DIR ${CMAKE_BINARY_DIR}/filamentWindows/build)
set(FILAMENT_PREBUILD_ZIP ${CMAKE_BINARY_DIR}/filamentWindows/filament-v1.9.9-windows.tgz)
if (NOT EXISTS ${FILAMENT_PREBUILD_DIR})
		file(MAKE_DIRECTORY ${FILAMENT_PREBUILD_DIR})
endif ()

set(FILAMENT_READY FALSE)
if(EXISTS ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/filament.lib)
	set(FILAMENT_READY TRUE)
	message (STATUS "Filament is installed" )
else ()
	set(FILAMENT_READY FALSE)
	message (STATUS "Filament is not installed" )
endif ()
if (NOT FILAMENT_READY)
	if(NOT EXISTS "${FILAMENT_PREBUILD_ZIP}")
		message(STATUS "Downloading ${FILAMENT_DOWNLOAD_URL}...")
		file(
			DOWNLOAD "${FILAMENT_DOWNLOAD_URL}" "${FILAMENT_PREBUILD_ZIP}"
			SHOW_PROGRESS
		)
	endif()
	message(STATUS "Extracting ${FILAMENT_PREBUILD_ZIP}...")
	execute_process(
		COMMAND ${CMAKE_COMMAND} -E tar xzf "${FILAMENT_PREBUILD_ZIP}"
		WORKING_DIRECTORY ${FILAMENT_PREBUILD_DIR}
	)
endif ()

add_library(MY_FILAMENT STATIC IMPORTED)
set_property(TARGET MY_FILAMENT PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/filament.lib)
set_property(TARGET MY_FILAMENT PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/filament.lib)

add_library(MY_FILAMENT_UTILS STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_UTILS PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/utils.lib)
set_property(TARGET MY_FILAMENT_UTILS PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/utils.lib)

add_library(MY_FILAMENT_GLTFIO STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_GLTFIO PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/gltfio.lib)
set_property(TARGET MY_FILAMENT_GLTFIO PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/gltfio.lib)

add_library(MY_FILAMENT_GLTFIO_CORE STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_GLTFIO_CORE PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/gltfio_core.lib)
set_property(TARGET MY_FILAMENT_GLTFIO_CORE PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/gltfio_core.lib)

add_library(MY_FILAMENT_DRACODEC STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_DRACODEC PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/dracodec.lib)
set_property(TARGET MY_FILAMENT_DRACODEC PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/dracodec.lib)

add_library(MY_FILAMENT_BACKEND STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_BACKEND PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/backend.lib)
set_property(TARGET MY_FILAMENT_BACKEND PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/backend.lib)

add_library(MY_FILAMENT_SHADERS STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_SHADERS PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/shaders.lib)
set_property(TARGET MY_FILAMENT_SHADERS PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/shaders.lib)

add_library(MY_FILAMENT_MATH STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_MATH PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/filamat.lib)
set_property(TARGET MY_FILAMENT_MATH PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/filamat.lib)

add_library(MY_FILAMENT_GEOMETRY STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_GEOMETRY PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/geometry.lib)
set_property(TARGET MY_FILAMENT_GEOMETRY PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/geometry.lib)

add_library(MY_FILAMENT_VIEWER STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_VIEWER PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/viewer.lib)
set_property(TARGET MY_FILAMENT_VIEWER PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/viewer.lib)

add_library(MY_FILAMENT_IBL STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_IBL PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/ibl.lib)
set_property(TARGET MY_FILAMENT_IBL PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/ibl.lib)

add_library(MY_FILAMENT_FLAT STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_FLAT PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/filaflat.lib)
set_property(TARGET MY_FILAMENT_FLAT PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/filaflat.lib)

add_library(MY_FILAMENT_BRIDGE STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_BRIDGE PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/filabridge.lib)
set_property(TARGET MY_FILAMENT_BRIDGE PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/filabridge.lib)

add_library(MY_FILAMENT_CAMUTILS STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_CAMUTILS PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/camutils.lib)
set_property(TARGET MY_FILAMENT_CAMUTILS PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/camutils.lib)

add_library(MY_FILAMENT_BLUEGL STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_BLUEGL PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/bluegl.lib)
set_property(TARGET MY_FILAMENT_BLUEGL PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/bluegl.lib)

add_library(MY_FILAMENT_BLUEVK STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_BLUEVK PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/bluevk.lib)
set_property(TARGET MY_FILAMENT_BLUEVK PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/bluevk.lib)

add_library(MY_FILAMENT_IMAGE STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_IMAGE PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/image.lib)
set_property(TARGET MY_FILAMENT_IMAGE PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/image.lib)

add_library(MY_FILAMENT_SMOL-V STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_SMOL-V PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/smol-v.lib)
set_property(TARGET MY_FILAMENT_SMOL-V PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/smol-v.lib)

add_library(MY_FILAMENT_MESHOPT STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_MESHOPT PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/meshoptimizer.lib)
set_property(TARGET MY_FILAMENT_MESHOPT PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/meshoptimizer.lib)

add_library(MY_FILAMENT_MATDBG STATIC IMPORTED)
set_property(TARGET MY_FILAMENT_MATDBG PROPERTY IMPORTED_LOCATION_DEBUG ${FILAMENT_PREBUILD_DIR}/lib/x86_64/mdd/matdbg.lib)
set_property(TARGET MY_FILAMENT_MATDBG PROPERTY IMPORTED_LOCATION_RELEASE ${FILAMENT_PREBUILD_DIR}/lib/x86_64/md/matdbg.lib)

set (HEADERS
	apeFilamentWindowsRenderPlugin.h
	)
set (SOURCES
	apeFilamentWindowsRenderPlugin.cpp
	)
include_directories(
	${FILAMENT_PREBUILD_DIR}/include
	)
	
add_library (apeFilamentWindowsRenderPlugin SHARED ${SOURCES} ${HEADERS})

target_link_libraries (apeFilamentWindowsRenderPlugin apePluginManager apeSceneManager apeEventManager apeCoreConfig apeUserInputMacro ${OPENGL_LIBRARIES} 
MY_FILAMENT MY_FILAMENT_UTILS MY_FILAMENT_GLTFIO MY_FILAMENT_GLTFIO_CORE MY_FILAMENT_DRACODEC MY_FILAMENT_BACKEND MY_FILAMENT_SHADERS MY_FILAMENT_MATH MY_FILAMENT_GEOMETRY MY_FILAMENT_VIEWER
MY_FILAMENT_IBL MY_FILAMENT_FLAT MY_FILAMENT_BRIDGE MY_FILAMENT_CAMUTILS MY_FILAMENT_BLUEGL MY_FILAMENT_BLUEVK MY_FILAMENT_IMAGE MY_FILAMENT_SMOL-V MY_FILAMENT_MESHOPT MY_FILAMENT_MATDBG
Shlwapi.lib)

set_property (TARGET apeFilamentWindowsRenderPlugin PROPERTY COMPILE_DEFINITIONS APE_SOURCE_DIR="${APE_SOURCE_DIR}")

set_property (TARGET apeFilamentWindowsRenderPlugin PROPERTY FOLDER "Plugins/Render")


