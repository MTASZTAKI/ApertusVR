{
  "source": "doc/api/tracing.md",
  "modules": [
    {
      "textRaw": "Trace Events",
      "name": "trace_events",
      "introduced_in": "v7.7.0",
      "stability": 1,
      "stabilityText": "Experimental",
      "desc": "<p>Trace Event provides a mechanism to centralize tracing information generated by\nV8, Node.js core, and userspace code.</p>\n<p>Tracing can be enabled with the <code>--trace-event-categories</code> command-line flag\nor by using the <code>trace_events</code> module. The <code>--trace-event-categories</code> flag\naccepts a list of comma-separated category names.</p>\n<p>The available categories are:</p>\n<ul>\n<li><code>node</code> - An empty placeholder.</li>\n<li><code>node.async_hooks</code> - Enables capture of detailed <a href=\"async_hooks.html\"><code>async_hooks</code></a> trace data.\nThe <a href=\"async_hooks.html\"><code>async_hooks</code></a> events have a unique <code>asyncId</code> and a special <code>triggerId</code>\n<code>triggerAsyncId</code> property.</li>\n<li><code>node.bootstrap</code> - Enables capture of Node.js bootstrap milestones.</li>\n<li><code>node.perf</code> - Enables capture of <a href=\"perf_hooks.html\">Performance API</a> measurements.<ul>\n<li><code>node.perf.usertiming</code> - Enables capture of only Performance API User Timing\nmeasures and marks.</li>\n<li><code>node.perf.timerify</code> - Enables capture of only Performance API timerify\nmeasurements.</li>\n</ul>\n</li>\n<li><code>node.fs.sync</code> - Enables capture of trace data for file system sync methods.</li>\n<li><code>v8</code> - The <a href=\"v8.html\">V8</a> events are GC, compiling, and execution related.</li>\n</ul>\n<p>By default the <code>node</code>, <code>node.async_hooks</code>, and <code>v8</code> categories are enabled.</p>\n<pre><code class=\"lang-txt\">node --trace-event-categories v8,node,node.async_hooks server.js\n</code></pre>\n<p>Prior versions of Node.js required the use of the <code>--trace-events-enabled</code>\nflag to enable trace events. This requirement has been removed. However, the\n<code>--trace-events-enabled</code> flag <em>may</em> still be used and will enable the\n<code>node</code>, <code>node.async_hooks</code>, and <code>v8</code> trace event categories by default.</p>\n<pre><code class=\"lang-txt\">node --trace-events-enabled\n\n// is equivalent to\n\nnode --trace-event-categories v8,node,node.async_hooks\n</code></pre>\n<p>Alternatively, trace events may be enabled using the <code>trace_events</code> module:</p>\n<pre><code class=\"lang-js\">const trace_events = require(&#39;trace_events&#39;);\nconst tracing = trace_events.createTracing({ categories: [&#39;node.perf&#39;] });\ntracing.enable();  // Enable trace event capture for the &#39;node.perf&#39; category\n\n// do work\n\ntracing.disable();  // Disable trace event capture for the &#39;node.perf&#39; category\n</code></pre>\n<p>Running Node.js with tracing enabled will produce log files that can be opened\nin the <a href=\"https://www.chromium.org/developers/how-tos/trace-event-profiling-tool\"><code>chrome://tracing</code></a>\ntab of Chrome.</p>\n<p>The logging file is by default called <code>node_trace.${rotation}.log</code>, where\n<code>${rotation}</code> is an incrementing log-rotation id. The filepath pattern can\nbe specified with <code>--trace-event-file-pattern</code> that accepts a template\nstring that supports <code>${rotation}</code> and <code>${pid}</code>. For example:</p>\n<pre><code class=\"lang-txt\">node --trace-event-categories v8 --trace-event-file-pattern &#39;${pid}-${rotation}.log&#39; server.js\n</code></pre>\n<p>Starting with Node.js 10.0.0, the tracing system uses the same time source\nas the one used by <code>process.hrtime()</code>\nhowever the trace-event timestamps are expressed in microseconds,\nunlike <code>process.hrtime()</code> which returns nanoseconds.</p>\n",
      "modules": [
        {
          "textRaw": "The `trace_events` module",
          "name": "the_`trace_events`_module",
          "meta": {
            "added": [
              "v10.0.0"
            ],
            "changes": []
          },
          "modules": [
            {
              "textRaw": "`Tracing` object",
              "name": "`tracing`_object",
              "meta": {
                "added": [
                  "v10.0.0"
                ],
                "changes": []
              },
              "desc": "<p>The <code>Tracing</code> object is used to enable or disable tracing for sets of\ncategories. Instances are created using the <code>trace_events.createTracing()</code>\nmethod.</p>\n<p>When created, the <code>Tracing</code> object is disabled. Calling the\n<code>tracing.enable()</code> method adds the categories to the set of enabled trace event\ncategories. Calling <code>tracing.disable()</code> will remove the categories from the\nset of enabled trace event categories.</p>\n",
              "modules": [
                {
                  "textRaw": "`tracing.categories`",
                  "name": "`tracing.categories`",
                  "meta": {
                    "added": [
                      "v10.0.0"
                    ],
                    "changes": []
                  },
                  "desc": "<ul>\n<li>{string}</li>\n</ul>\n<p>A comma-separated list of the trace event categories covered by this\n<code>Tracing</code> object.</p>\n",
                  "type": "module",
                  "displayName": "`tracing.categories`"
                },
                {
                  "textRaw": "`tracing.disable()`",
                  "name": "`tracing.disable()`",
                  "meta": {
                    "added": [
                      "v10.0.0"
                    ],
                    "changes": []
                  },
                  "desc": "<p>Disables this <code>Tracing</code> object.</p>\n<p>Only trace event categories <em>not</em> covered by other enabled <code>Tracing</code> objects\nand <em>not</em> specified by the <code>--trace-event-categories</code> flag will be disabled.</p>\n<pre><code class=\"lang-js\">const trace_events = require(&#39;trace_events&#39;);\nconst t1 = trace_events.createTracing({ categories: [&#39;node&#39;, &#39;v8&#39;] });\nconst t2 = trace_events.createTracing({ categories: [&#39;node.perf&#39;, &#39;node&#39;] });\nt1.enable();\nt2.enable();\n\n// Prints &#39;node,node.perf,v8&#39;\nconsole.log(trace_events.getEnabledCategories());\n\nt2.disable(); // will only disable emission of the &#39;node.perf&#39; category\n\n// Prints &#39;node,v8&#39;\nconsole.log(trace_events.getEnabledCategories());\n</code></pre>\n",
                  "type": "module",
                  "displayName": "`tracing.disable()`"
                },
                {
                  "textRaw": "`tracing.enable()`",
                  "name": "`tracing.enable()`",
                  "meta": {
                    "added": [
                      "v10.0.0"
                    ],
                    "changes": []
                  },
                  "desc": "<p>Enables this <code>Tracing</code> object for the set of categories covered by the\n<code>Tracing</code> object.</p>\n",
                  "type": "module",
                  "displayName": "`tracing.enable()`"
                },
                {
                  "textRaw": "`tracing.enabled`",
                  "name": "`tracing.enabled`",
                  "meta": {
                    "added": [
                      "v10.0.0"
                    ],
                    "changes": []
                  },
                  "desc": "<ul>\n<li>{boolean} <code>true</code> only if the <code>Tracing</code> object has been enabled.</li>\n</ul>\n",
                  "type": "module",
                  "displayName": "`tracing.enabled`"
                }
              ],
              "type": "module",
              "displayName": "`Tracing` object"
            },
            {
              "textRaw": "`trace_events.createTracing(options)`",
              "name": "`trace_events.createtracing(options)`",
              "meta": {
                "added": [
                  "v10.0.0"
                ],
                "changes": []
              },
              "desc": "<ul>\n<li><code>options</code> {Object}<ul>\n<li><code>categories</code> {string[]} An array of trace category names. Values included\nin the array are coerced to a string when possible. An error will be\nthrown if the value cannot be coerced.</li>\n</ul>\n</li>\n<li>Returns: {Tracing}.</li>\n</ul>\n<p>Creates and returns a <code>Tracing</code> object for the given set of <code>categories</code>.</p>\n<pre><code class=\"lang-js\">const trace_events = require(&#39;trace_events&#39;);\nconst categories = [&#39;node.perf&#39;, &#39;node.async_hooks&#39;];\nconst tracing = trace_events.createTracing({ categories });\ntracing.enable();\n// do stuff\ntracing.disable();\n</code></pre>\n",
              "type": "module",
              "displayName": "`trace_events.createTracing(options)`"
            },
            {
              "textRaw": "`trace_events.getEnabledCategories()`",
              "name": "`trace_events.getenabledcategories()`",
              "meta": {
                "added": [
                  "v10.0.0"
                ],
                "changes": []
              },
              "desc": "<ul>\n<li>Returns: {string}</li>\n</ul>\n<p>Returns a comma-separated list of all currently-enabled trace event\ncategories. The current set of enabled trace event categories is determined\nby the <em>union</em> of all currently-enabled <code>Tracing</code> objects and any categories\nenabled using the <code>--trace-event-categories</code> flag.</p>\n<p>Given the file <code>test.js</code> below, the command\n<code>node --trace-event-categories node.perf test.js</code> will print\n<code>&#39;node.async_hooks,node.perf&#39;</code> to the console.</p>\n<pre><code class=\"lang-js\">const trace_events = require(&#39;trace_events&#39;);\nconst t1 = trace_events.createTracing({ categories: [&#39;node.async_hooks&#39;] });\nconst t2 = trace_events.createTracing({ categories: [&#39;node.perf&#39;] });\nconst t3 = trace_events.createTracing({ categories: [&#39;v8&#39;] });\n\nt1.enable();\nt2.enable();\n\nconsole.log(trace_events.getEnabledCategories());\n</code></pre>\n",
              "type": "module",
              "displayName": "`trace_events.getEnabledCategories()`"
            }
          ],
          "type": "module",
          "displayName": "The `trace_events` module"
        }
      ],
      "type": "module",
      "displayName": "Trace Events"
    }
  ]
}
